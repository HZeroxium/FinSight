# =============================================================================
# FIN SIGHT MARKET DATASET SERVICE - COMPLETE ENVIRONMENT CONFIGURATION
# =============================================================================
# Copy this file to .env and customize for your environment
# All variables support environment variable override and are validated at startup

# =============================================================================
# SERVICE CONFIGURATION
# =============================================================================
# Application identification and behavior
APP_NAME=market-dataset-service
DEBUG=false
ENVIRONMENT=development
HOST=0.0.0.0
PORT=8000

# =============================================================================
# STORAGE CONFIGURATION
# =============================================================================
# Base directory for local storage of market data files
STORAGE_BASE_DIRECTORY=data/market_data

# Object storage prefix and separator for cloud storage organization
STORAGE_PREFIX=finsight/market_data/datasets
STORAGE_SEPARATOR=/

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# MongoDB connection settings for metadata storage and caching
MONGODB_URL=mongodb://localhost:27017/
MONGODB_DATABASE=finsight_market_data

# =============================================================================
# OBJECT STORAGE CONFIGURATION
# =============================================================================
# Storage provider selection (minio, digitalocean, aws, s3)
STORAGE_PROVIDER=minio

# =============================================================================
# S3-COMPATIBLE STORAGE SETTINGS (MinIO, AWS S3)
# =============================================================================
# MinIO local development settings
S3_ENDPOINT_URL=http://localhost:9000
S3_ACCESS_KEY=minioadmin
S3_SECRET_KEY=minioadmin
S3_REGION_NAME=us-east-1
S3_BUCKET_NAME=market-data
S3_USE_SSL=false
S3_VERIFY_SSL=true
S3_SIGNATURE_VERSION=s3v4
S3_MAX_POOL_CONNECTIONS=50

# =============================================================================
# DIGITALOCEAN SPACES SPECIFIC SETTINGS
# =============================================================================
# DigitalOcean Spaces configuration for cloud storage
SPACES_ENDPOINT_URL=https://nyc3.digitaloceanspaces.com
SPACES_ACCESS_KEY=
SPACES_SECRET_KEY=
SPACES_REGION_NAME=nyc3
SPACES_BUCKET_NAME=finsight-market-data

# =============================================================================
# AWS S3 SPECIFIC SETTINGS
# =============================================================================
# AWS S3 configuration for direct AWS integration
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_REGION_NAME=us-east-1
AWS_BUCKET_NAME=finsight-market-data

# =============================================================================
# DATA COLLECTION CONFIGURATION
# =============================================================================
# Default symbols for data collection (comma-separated)
# Supported formats: BTCUSDT, ETHUSDT, BNBUSDT
DEFAULT_SYMBOLS=BTCUSDT,ETHUSDT,BNBUSDT

# Default timeframes for data collection (comma-separated)
# Supported formats: 1m, 5m, 15m, 1h, 4h, 1d, 1w
DEFAULT_TIMEFRAMES=1h,4h,1d

# Collection limits for API requests and data processing
MAX_OHLCV_LIMIT=1000
MAX_TRADES_LIMIT=1000
MAX_ORDERBOOK_LIMIT=100

# =============================================================================
# EXCHANGE CONFIGURATION
# =============================================================================
# Binance API credentials (optional - for live data collection)
BINANCE_API_KEY=
BINANCE_SECRET_KEY=

# Binance rate limiting configuration
BINANCE_REQUESTS_PER_MINUTE=1200
BINANCE_ORDERS_PER_SECOND=10
BINANCE_ORDERS_PER_DAY=200000

# =============================================================================
# REPOSITORY CONFIGURATION
# =============================================================================
# Primary repository type for data storage
# Supported: csv, mongodb, influxdb, parquet
REPOSITORY_TYPE=csv

# =============================================================================
# CROSS-REPOSITORY CONFIGURATION FOR TIMEFRAME CONVERSION
# =============================================================================
# Source repository configuration for data conversion
SOURCE_REPOSITORY_TYPE=csv
SOURCE_TIMEFRAME=1h

# Target repository configuration for converted data
TARGET_REPOSITORY_TYPE=csv
# Comma-separated list of target timeframes
TARGET_TIMEFRAMES=2h,4h,12h,1d

# Conversion settings for timeframe aggregation
ENABLE_PARALLEL_CONVERSION=true
MAX_CONCURRENT_CONVERSIONS=3
CONVERSION_BATCH_SIZE=1000

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================
# Log level and file settings for debugging and monitoring
LOG_LEVEL=INFO
LOG_FILE_PATH=logs/

# Structured logging for better log analysis and monitoring
ENABLE_STRUCTURED_LOGGING=true

# =============================================================================
# CACHE CONFIGURATION
# =============================================================================
# Enable/disable caching for performance optimization
ENABLE_CACHING=true
CACHE_TTL_SECONDS=300
CACHE_MAX_SIZE=1000

# =============================================================================
# ADMIN API CONFIGURATION
# =============================================================================
# IMPORTANT: Change this key in production!
# Admin API key for administrative operations and data management
API_KEY=admin-default-key-change-in-production

# =============================================================================
# CRON JOB CONFIGURATION
# =============================================================================
# Enable/disable automated data collection
CRON_JOB_ENABLED=false

# Cron schedule (every 4 hours by default)
# Format: minute hour day month weekday
CRON_JOB_SCHEDULE=0 */4 * * *

# Job limits and configuration
CRON_JOB_MAX_SYMBOLS_PER_RUN=10
CRON_JOB_LOG_FILE=logs/market_data_job.log
CRON_JOB_PID_FILE=market_data_job.pid

# =============================================================================
# DEMO CONFIGURATION
# =============================================================================
# Demo mode settings for testing and demonstration
DEMO_MAX_SYMBOLS=5
DEMO_DAYS_BACK=7

# =============================================================================
# EUREKA CLIENT CONFIGURATION
# =============================================================================
# Service discovery and registration with Eureka server
ENABLE_EUREKA_CLIENT=true
EUREKA_SERVER_URL=http://localhost:8761
EUREKA_APP_NAME=market-dataset-service

# Instance identification and networking
EUREKA_INSTANCE_ID=
EUREKA_HOST_NAME=
EUREKA_IP_ADDRESS=
EUREKA_PORT=8000
EUREKA_SECURE_PORT=8443
EUREKA_SECURE_PORT_ENABLED=false

# Instance URLs for health checks and status
EUREKA_HOME_PAGE_URL=
EUREKA_STATUS_PAGE_URL=
EUREKA_HEALTH_CHECK_URL=

# VIP addresses for load balancing
EUREKA_VIP_ADDRESS=
EUREKA_SECURE_VIP_ADDRESS=
EUREKA_PREFER_IP_ADDRESS=true

# =============================================================================
# EUREKA TIMING CONFIGURATION
# =============================================================================
# Lease management for service registration
EUREKA_LEASE_RENEWAL_INTERVAL_IN_SECONDS=30
EUREKA_LEASE_EXPIRATION_DURATION_IN_SECONDS=90

# Registry operations and synchronization
EUREKA_REGISTRY_FETCH_INTERVAL_SECONDS=30
EUREKA_INSTANCE_INFO_REPLICATION_INTERVAL_SECONDS=30
EUREKA_INITIAL_INSTANCE_INFO_REPLICATION_INTERVAL_SECONDS=40

# Heartbeat settings for service health monitoring
EUREKA_HEARTBEAT_INTERVAL_SECONDS=30

# =============================================================================
# EUREKA RETRY CONFIGURATION
# =============================================================================
# Registration retry settings with exponential backoff
EUREKA_REGISTRATION_RETRY_ATTEMPTS=3
EUREKA_REGISTRATION_RETRY_DELAY_SECONDS=5

# Heartbeat retry settings for connection resilience
EUREKA_HEARTBEAT_RETRY_ATTEMPTS=3
EUREKA_HEARTBEAT_RETRY_DELAY_SECONDS=2

# Retry backoff configuration for network issues
EUREKA_RETRY_BACKOFF_MULTIPLIER=2.0
EUREKA_MAX_RETRY_DELAY_SECONDS=60

# Auto-reregistration for service recovery
EUREKA_ENABLE_AUTO_RE_REGISTRATION=true
EUREKA_RE_REGISTRATION_DELAY_SECONDS=10

# =============================================================================
# VALIDATION RULES AND CONSTRAINTS
# =============================================================================
# The following constraints are automatically enforced:

# Environment values: development, staging, production, testing
# Log levels: DEBUG, INFO, WARNING, ERROR, CRITICAL
# Storage providers: minio, digitalocean, aws, s3
# Repository types: csv, mongodb, influxdb, parquet
# MAX_OHLCV_LIMIT: 100-10000
# MAX_TRADES_LIMIT: 100-10000
# MAX_ORDERBOOK_LIMIT: 10-1000
# BINANCE_REQUESTS_PER_MINUTE: 100-2000
# BINANCE_ORDERS_PER_SECOND: 1-100
# BINANCE_ORDERS_PER_DAY: 1000-1000000
# MAX_CONCURRENT_CONVERSIONS: 1-10
# CONVERSION_BATCH_SIZE: 100-10000
# CACHE_TTL_SECONDS: 60-86400
# CACHE_MAX_SIZE: 100-10000
# DEMO_MAX_SYMBOLS: 1-20
# DEMO_DAYS_BACK: 1-30

# =============================================================================
# ENVIRONMENT-SPECIFIC CONFIGURATION EXAMPLES
# =============================================================================

# Development Environment
# DEBUG=true
# LOG_LEVEL=DEBUG
# ENVIRONMENT=development
# CACHE_TTL_SECONDS=60
# CRON_JOB_ENABLED=false
# ENABLE_STRUCTURED_LOGGING=true

# Staging Environment
# DEBUG=false
# LOG_LEVEL=INFO
# ENVIRONMENT=staging
# CACHE_TTL_SECONDS=300
# CRON_JOB_ENABLED=true
# CRON_JOB_SCHEDULE=0 */2 * * *

# Production Environment
# DEBUG=false
# LOG_LEVEL=WARNING
# ENVIRONMENT=production
# CACHE_TTL_SECONDS=1800
# CRON_JOB_ENABLED=true
# CRON_JOB_SCHEDULE=0 */1 * * *
# ENABLE_STRUCTURED_LOGGING=true
# MAX_CONCURRENT_CONVERSIONS=5

# =============================================================================
# STORAGE PROVIDER CONFIGURATION EXAMPLES
# =============================================================================

# MinIO Local Development
# STORAGE_PROVIDER=minio
# S3_ENDPOINT_URL=http://localhost:9000
# S3_ACCESS_KEY=minioadmin
# S3_SECRET_KEY=minioadmin
# S3_BUCKET_NAME=market-data

# DigitalOcean Spaces
# STORAGE_PROVIDER=digitalocean
# SPACES_ENDPOINT_URL=https://nyc3.digitaloceanspaces.com
# SPACES_ACCESS_KEY=your-spaces-key
# SPACES_SECRET_KEY=your-spaces-secret
# SPACES_BUCKET_NAME=finsight-market-data

# AWS S3
# STORAGE_PROVIDER=aws
# AWS_ACCESS_KEY_ID=your-aws-key
# AWS_SECRET_ACCESS_KEY=your-aws-secret
# AWS_REGION_NAME=us-east-1
# AWS_BUCKET_NAME=finsight-market-data

# =============================================================================
# PERFORMANCE TUNING
# =============================================================================

# High Throughput Configuration
# MAX_CONCURRENT_CONVERSIONS=8
# CONVERSION_BATCH_SIZE=2000
# CACHE_MAX_SIZE=2000
# CACHE_TTL_SECONDS=7200

# Low Memory Configuration
# MAX_CONCURRENT_CONVERSIONS=1
# CONVERSION_BATCH_SIZE=500
# CACHE_MAX_SIZE=500
# CACHE_TTL_SECONDS=1800

# Real-time Configuration
# CRON_JOB_SCHEDULE=*/5 * * * *
# CACHE_TTL_SECONDS=300
# ENABLE_CACHING=false

# =============================================================================
# SECURITY CONSIDERATIONS
# =============================================================================
# 1. Never commit API keys or secrets to version control
# 2. Use environment variables for all sensitive configuration
# 3. Rotate API keys regularly
# 4. Use strong, unique API keys for each environment
# 5. Monitor API usage and implement rate limiting
# 6. Use HTTPS in production environments
# 7. Implement proper authentication for admin endpoints
# 8. Use IAM roles when possible (AWS)
# 9. Implement proper access controls for storage buckets
# 10. Monitor and log all data access operations

# =============================================================================
# MONITORING AND OBSERVABILITY
# =============================================================================
# Enable structured logging for better monitoring
# ENABLE_STRUCTURED_LOGGING=true

# Configure appropriate log levels for different environments
# Development: LOG_LEVEL=DEBUG
# Staging: LOG_LEVEL=INFO
# Production: LOG_LEVEL=WARNING

# Monitor key metrics:
# - Data collection success/failure rates
# - Storage operation latency
# - Cache hit/miss rates
# - API rate limit usage
# - Database connection health
# - Storage provider health
# - Conversion job performance
# - Cron job execution status
